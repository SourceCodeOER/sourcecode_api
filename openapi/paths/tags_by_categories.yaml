paths:
  /api/tags_by_categories:
    get:
      summary: "Retrieve Tag categories with their related tags"
      tags:
        - guest
      operationId: getTagCategoriesWithTags
      x-controller: tags_categories
      x-operation: getTagCategoriesWithTags
      parameters:
        - in: query
          name: state
          schema:
            type: array
            description: "Filter the tags by their state. By default, no filtering is done."
            items:
              $ref: "../definitions.yaml#/components/schemas/TagState"
            maxItems: 4
        - in: query
          name: onlySelected
          schema:
            type: array
            description: "If not empty, only consider the given tag categories ID(S). If empty, no tag category is ignored"
            default: []
            uniqueItems: true
            items:
              type: integer
              minimum: 0
              example: 42
              description: "A Tag Category ID"
        - in: query
          name: countStates
          description: | 
            If not empty, only consider the given exercise state(s) to compute the field "total" inside each tag.   
            If empty, every exercise state will be considered for the sum.
          schema:
            type: array
            items:
              $ref: "../definitions.yaml#/components/schemas/State"
            maxItems: 5
      responses:
        '200':
          description: "An array of Tag category with their related tags"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "../definitions.yaml#/components/schemas/TagCategoryWithTags"
                uniqueItems: true
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"

components:
  securitySchemes:
    bearerAuth:
      $ref: "../security.yaml#/components/securitySchemes/bearerAuth"