paths:
  /api/exercises/{id}:
    parameters:
        - name: id
          in: path
          description: "The exercise ID"
          required: true
          schema:
            type: integer
        - name: includeOptions
          in: query
          description: "To include additional properties when fetching exercise"
          style: deepObject
          schema:
            $ref: "../definitions.yaml#/components/schemas/IncludeOptions"
    get:
      summary: "Retrieve this specific exercise data"
      operationId: getExerciseByID
      x-controller: exercises
      x-operation: getExerciseByID
      security:
        - {}
        - bearerAuth: []
      tags:
        - guest
        - user
      responses:
        '200':
          description: "Exercise data inside a JSON"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../definitions.yaml#/components/schemas/SearchableExerciseModel"
                  - type: object
                    properties:
                      vote:
                        type: number
                        minimum: 0.0
                        example: 5.0
                        description: "If this endpoint was used by an authentified user, it will fetch his/her vote if it exists"
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"
    put:
      summary: "Update this specific exercise data"
      description: |
        Update this specific exercise data
        The following restrictions are applied on simple user(s) for the field "state" (no restriction for admin):
        
        1. He/She can only modify his/her own exercises
        2. Only the following states are allowed : 
          - DRAFT  
          - PENDING  
      operationId: UpdateExercise
      x-controller: exercises
      x-operation: UpdateExercise
      tags:
        - user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../definitions.yaml#/components/schemas/ExerciseUpdateForm"
                - type: object
                  properties:
                    removePreviousFile:
                      type: boolean
                      default: false
                      example: true
                      description: "If set to true, the API will delete the previous file when updating the exercise"
          multipart/form-data:
            schema:
              allOf:
                - $ref: "../definitions.yaml#/components/schemas/ExerciseUpdateForm"
                - type: object
                  description: "If we want to also to change the sources zip file of this exercise"
                  properties:
                    exerciseFile:
                      type: string
                      format: binary
                      description: "The sources of this exercise, in zip format"
                  required:
                    - exerciseFile
            encoding:
              exerciseFile:
              # MIME for zip https://stackoverflow.com/a/7027582/6149867
                contentType: application/zip, application/x-zip-compressed, multipart/x-zip
      responses:
        '200':
          description: OK
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"

components:
  securitySchemes:
    bearerAuth:
      $ref: "../security.yaml#/components/securitySchemes/bearerAuth"