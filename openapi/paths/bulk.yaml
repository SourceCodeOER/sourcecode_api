paths:
  /api/bulk/delete_exercises:
    delete:
      summary: "Delete given exercises"
      description: "Delete given exercises. An simple user can only delete his/her own exercises (no restriction for admin)"
      operationId: "DeleteExercises"
      x-controller: bulk
      x-operation: DeleteExercises
      tags:
        - user
        - admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: "An array of exercises IDs"
              minItems: 1
              uniqueItems: true
              items:
                type: integer
                minimum: 0
                example: 42
                description: "An exercise ID"
      responses:
        '200':
          description: "OK"
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"
  /api/bulk/delete_tags:
    delete:
      summary: "Delete given tags"
      description: "Delete given tags."
      operationId: "DeleteTags"
      x-controller: bulk
      x-operation: DeleteTags
      tags:
        - admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: "An array of tags IDs"
              minItems: 1
              uniqueItems: true
              items:
                type: integer
                minimum: 0
                example: 42
                description: "A tag ID"
      responses:
        '200':
          description: "OK"
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"
  /api/bulk/delete_tags_categories:
    delete:
      summary: "Delete given tags categories"
      description: "Delete given tags categories."
      operationId: "DeleteTagCategories"
      x-controller: bulk
      x-operation: DeleteTagCategories
      tags:
        - admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: "An array of tag category IDs"
              minItems: 1
              uniqueItems: true
              items:
                type: integer
                minimum: 0
                example: 42
                description: "A tag category ID"
      responses:
        '200':
          description: "OK"
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"
  /api/bulk/modify_exercises_status:
    put:
      summary: "Change the status of given exercises"
      description: |
        Change the status of given exercises.   
        
        The following restrictions are applied on simple user(s) (no restriction for admin):  
        
        1. He/She can only modify his/her own exercises
        2. Only the following states are allowed :  
          - DRAFT
          - PENDING 
      operationId: "ChangeExercisesStatus"
      x-controller: bulk
      x-operation: ChangeExercisesStatus
      tags:
        - admin
        - user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeExercisesStatus"
      responses:
        '200':
          description: "OK"
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"
  /api/bulk/create_or_find_tag_categories:
    post:
      summary: "Creates or Find tag categories"
      x-controller: bulk
      x-operation: createOrFindTagCategories
      tags:
        - admin
      operationId: createOrFindTagCategories
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../definitions.yaml#/components/schemas/TagCategoriesForm"
      responses:
        '200':
          description: "An array of tag categories"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "../definitions.yaml#/components/schemas/Tag_Category"
                uniqueItems: true
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"
  /api/bulk/create_exercises:
    post:
      summary: "Creates multiple exercises into the system"
      description: |
        Creates multiple exercises into the system
        By default (if nothing specified), an exercise will be in state "DRAFT". 

        The following restrictions are applied on simple user(s) for the field "state" (no restriction for admin):
        
        1. He/She can only modify his/her own exercises
        2. Only the following states are allowed : 
          - DRAFT  
          - PENDING  
      tags:
        - user
      operationId: createMultipleExercises
      x-controller: bulk
      x-operation: createMultipleExercises
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../definitions.yaml#/components/schemas/MultipleExercisesForm"
          multipart/form-data:
            schema:
              type: object
              properties:
                exercisesData:
                  $ref: "../definitions.yaml#/components/schemas/MultipleExercisesForm"
                files:
                  type: array
                  description: "The sources of the exercises, each in zip format"
                  minItems: 1
                  items:
                    type: string
                    format: binary
                    description: "The source of an exercise, in zip format"
                filesMapping:
                  type: array
                  description: "Mapping between the given file (to find out which data belong to exercise)"
                  minItems: 1
                  items:
                    type: object
                    properties:
                      filename:
                        type: string
                        description: "The name of the given source file"
                        example: "file1.zip"
                      exercise:
                        type: integer
                        description: "The location of the related exercise in the exercisesData array"
                    required:
                      - filename
                      - exercise
              required:
                - exercisesData
                - files
                - filesMapping
      responses:
        '200':
          description: OK
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"
  /api/bulk/create_tags:
    post:
      summary: "Creates multiple tags into the system"
      tags:
        - user
      operationId: createMultipleTags
      x-controller: bulk
      x-operation: createMultipleTags
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              minItems: 1
              items:
                allOf:
                  - $ref: "../definitions.yaml#/components/schemas/TagProposal"
                  - type: object
                    properties:
                      isValidated:
                        type: boolean
                        example: false
                        default: false
                        description: "Should this tag validated or not ? By default, this tag is not validated"
      responses:
        '200':
          description: OK
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"
components:
  securitySchemes:
    bearerAuth:
      $ref: "../security.yaml#/components/securitySchemes/bearerAuth"
  schemas:
    ChangeExercisesStatus:
      type: object
      properties:
        exercises:
          type: array
          description: "An array of exercises IDs"
          minItems: 1
          uniqueItems: true
          items:
            type: integer
            minimum: 0
            example: 42
            description: "An exercise ID"
        state:
          $ref: "../definitions.yaml#/components/schemas/State"
      required:
        - exercises
        - state