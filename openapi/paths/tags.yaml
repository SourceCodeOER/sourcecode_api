paths:
  /api/tags:
    post:
      summary: "Submit a tag proposal"
      tags:
        - user
      operationId: submitTagProposal
      x-controller: tags
      x-operation: submitTagProposal
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../definitions.yaml#/components/schemas/TagProposal"
      responses:
        '200':
          description: OK
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"
    put:
      summary: "Modify a Tag"
      tags:
        - admin
      operationId: updateTag
      x-controller: tags
      x-operation: updateTag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../definitions.yaml#/components/schemas/TagFull"
      responses:
        '200':
          description: OK
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"
    get:
      summary: "Retrieve all tags"
      tags:
        - guest
      operationId: getTags
      x-controller: tags
      x-operation: getTags
      parameters:
        - in: query
          name: tags_ids
          schema:
            type: array
            items:
              type: integer
              minimum: 0
            minItems: 1
            description: "Only consider the given tag ID(S)"
        - in: query
          name: categories_ids
          schema:
            type: array
            items:
              type: integer
              minimum: 0
            minItems: 1
            description: "Only consider the given tag categories ID(S)"
        - in: query
          name: state
          schema:
            type: array
            description: "Filter the tags by their state. By default, no filtering is done."
            items:
              $ref: "../definitions.yaml#/components/schemas/TagState"
            maxItems: 3
        - in: query
          name: title
          schema:
            type: string
            description: "Filter the tags by their text (case-insensitive comparison)"
            maxLength: 100
      responses:
        '200':
          description: "An array of tag"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "../definitions.yaml#/components/schemas/TagFull"
                uniqueItems: true
        # Definition of all error statuses
        default:
          description: "Whatever error : 4XX - Client error (Bad Request, Unauthorized, etc.) , 5XX - Server error"
          content:
            application/json:
              schema:
                $ref: "../definitions.yaml#/components/schemas/ErrorObject"

components:
  securitySchemes:
    bearerAuth:
      $ref: "../security.yaml#/components/securitySchemes/bearerAuth"